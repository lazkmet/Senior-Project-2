@page "/Admin/AllUsers"
@attribute [Authorize(Roles = "Admin")]
@using Syncfusion.Blazor.Grids
@inject IDbContextFactory<WebAppDbContext> _contextFactory

<PageTitle>All Users</PageTitle>

<h1 class:"align-center" style:"text-decoration: underline">All Users</h1>

@if (AllUsers is null)
{
    <div>Loading...</div>
}
else
{
    <SfGrid @ref="usersGrid" DataSource="@AllUsers" AllowFiltering="true" AllowSorting="true" Width="100%" AllowPaging="true">
        <GridPageSettings PageSize="20"></GridPageSettings>
        <GridColumns>
            <GridColumn Field=@nameof(AllUser.FullName) HeaderText="Name" AllowSorting="true" AllowSearching="true" />
            <GridColumn Field=@nameof(AllUser.EmailAddress) HeaderText="Email Address" AllowSorting="true" AllowSearching="true" />
            <GridColumn Field=@nameof(AllUser.CoursesOwned) HeaderText="Courses Owned" AllowSorting="true" AllowSearching="false" AllowFiltering="false"/>
            <GridColumn Field=@nameof(AllUser.CoursesJoined) HeaderText="Courses Joined" AllowSorting="true" AllowSearching="false" AllowFiltering="false"/>
            <GridColumn Field=@nameof(AllUser.DateJoined) HeaderText="Date Joined" AllowSorting="true" AllowSearching="false" Format="d"/>
        </GridColumns>
    </SfGrid>
}

@code{
    /*struct UserWithCourseData
            {
            User user { get; set; }
            int courseCount { get; set; }
            int coursesOwned { get; set; }
    }
    private UserWithCourseData[] Users { get; set; }*/
    SfGrid<AllUser> usersGrid;
    List<AllUser>? AllUsers { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = _contextFactory.CreateDbContext();
        AllUsers = await context.AllUsers.ToListAsync();
    }
}